AWSTemplateFormatVersion: "2010-09-09"

Description: Template generated by rain

Parameters:
  FunctionNameParameter:
    Type: String

Resources:
  LinebotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
      RoleName: linebot_lambda_role
      Tags:
        - Key: Owner
          Value: Masaya

  LinebotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: lambda-sample-code-bucket
        S3Key: sample_code.zip
      FunctionName: !Sub ${FunctionNameParameter}
      Handler: lambda_handler
      PackageType: Zip
      Role: !GetAtt LinebotRole.Arn
      Runtime: python3.8
      Tags:
        - Key: Owner
          Value: Masaya

  LinebotLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LinebotFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

Outputs:
  LinebotRoleArn:
    Value: !GetAtt LinebotRole.Arn
  LinebotFunctionArn:
    Value: !GetAtt LinebotFunction.Arn
    Export:
      Name: LinebotResponseArn
  LinebotFunctionName:
    Value: !Ref LinebotFunction
    Export:
      Name: LinebotFunctionName
  
